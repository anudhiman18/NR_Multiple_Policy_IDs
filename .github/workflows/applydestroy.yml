name: Terraform New Relic Deployment
 
on:
  workflow_dispatch:
    inputs:
     variable:
     region:
        description: "Enter your region : "
        required: true  
        type: string   
  
env:
 BUCKET: astoragebucketnu
 TFSTATE_FILE: anudhiman.tfstate
 aws_region: ${{ github.event.inputs.region }}
 NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
 NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}

 
jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.aws_region }}
   
      - name: Terraform Init
        run: |
           terraform init -reconfigure -backend-config="bucket=${{ env.BUCKET }}" -backend-config="key=${{ env.TFSTATE_FILE }}" -backend-config="region=${{ env.aws_region }}" -input=false 
 
      - name: Terraform Plan
        run: |
           terraform plan -var='NEW_RELIC_API_KEY=${{ secrets.NEW_RELIC_API_KEY }}' -var='NEW_RELIC_ACCOUNT_ID=${{ secrets.NEW_RELIC_ACCOUNT_ID }}'
 
      - name: Terraform Apply 
        if: github.event.inputs.variable == 'apply'
        run : terraform apply -auto-approve -var="NEW_RELIC_API_KEY=${{ secrets.NEW_RELIC_API_KEY }}" -var="NEW_RELIC_ACCOUNT_ID=${{ secrets.NEW_RELIC_ACCOUNT_ID }}" 
      
      - name: Terraform Destroy
        if: github.event.inputs.variable == 'destroy'
        run : terraform destroy -auto-approve -var='NEW_RELIC_API_KEY=${{ secrets.NEW_RELIC_API_KEY }}' -var='NEW_RELIC_ACCOUNT_ID=${{ secrets.NEW_RELIC_ACCOUNT_ID }}'    

            

